{"version":3,"sources":["component/detail/moviedetail.module.css","component/filter/filter.module.css","assets/loading.gif","component/search/search.jsx","component/filter/filter.jsx","api/api.js","component/moviesitem/listitem.jsx","component/layout/loading.jsx","component/movielistings/listing.jsx","component/detail/moviedetail.jsx","app.js","serviceWorker.js","index.js","component/layout.module.css","component/moviesitem/listitem.module.css","component/search/search.module.css"],"names":["module","exports","Search","props","useState","searchdata","setsearchdata","className","style","searchwrap","onSubmit","event","onSearch","preventDefault","type","placeholder","onChange","e","target","value","count","total","Filter","setFilter","filterlist","data","year","map","key","onClick","genre","baseurl","fetchYtsData","a","api","get","response","console","log","fetcYtsMovies","filterData","page","pagenumber","Number","isInteger","datavalue","movies","modifieddata","id","title","rating","runtime","genres","summary","description_full","language","background_image","background_image_original","small_cover_image","medium_cover_image","torrents","fetcYtsMoviesdetail","movieid","moviedetails","movie","moviesuggestion","fetchdata","Listitems","moviedata","getMovideid","dataitem","item","src","alt","info","short","Fragment","Loading","srcimg","Listing","setytsmovie","useEffect","apiData","Moviedetail","closedetails","suggestId","setmoviedetail","movieapi","suggestmovie","setSuggest","suggestapi","open","cn","detailwrapper","headinfo","close","tags","socialinterest","download_count","like_count","moviesinfo","screenshot","frameBorder","width","height","yt_players","yt_trailer_code","allowFullScreen","large_screenshot_image1","large_screenshot_image2","large_screenshot_image3","cast","name","url_small_image","downloadlink","quality","size","download","href","url","hash","suggestionlist","mask","App","state","search","filterdata","commondata","setState","getfilterid","this","container","movie_count","filter","listings","React","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDom","render","document","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5d8b34b8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"detailwrapper\":\"moviedetail_detailwrapper__3cDNB\",\"open\":\"moviedetail_open__dXxt1\",\"mask\":\"moviedetail_mask__3Mty4\",\"close\":\"moviedetail_close__3HJqx\",\"headinfo\":\"moviedetail_headinfo__1Poiy\",\"info\":\"moviedetail_info__PJBEy\",\"moviesinfo\":\"moviedetail_moviesinfo__2DYuL\",\"screenshot\":\"moviedetail_screenshot__3sgmR\",\"cast\":\"moviedetail_cast__rUzGR\",\"socialinterest\":\"moviedetail_socialinterest__11iu1\",\"suggestionlist\":\"moviedetail_suggestionlist__3YLY8\",\"downloadlink\":\"moviedetail_downloadlink__2P-iL\",\"title\":\"moviedetail_title__3Ib-1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterlist\":\"filter_filterlist__3Egnp\"};","module.exports = __webpack_public_path__ + \"static/media/loading.a6b97ecb.gif\";","import React,{useState} from 'react'\r\nimport style from \"../search/search.module.css\"\r\n\r\nconst Search = (props) => {  \r\n    const[searchdata,setsearchdata]=useState('')\r\n\r\n    const handelchange = (e) =>{\r\n        setsearchdata(e.target.value)\r\n    }\r\n    const onformsubmit=(event)=>{\r\n        props.onSearch(searchdata)\r\n        event.preventDefault();\r\n    }\r\n    return (\r\n        <div className={style.searchwrap}>\r\n            <form onSubmit={onformsubmit}>\r\n            <input type=\"text\" placeholder=\"Search Movies...\" onChange={handelchange}/>\r\n            </form>\r\n    <span className={style.count}>Total Movies : <i>{props.total}</i></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\nimport style from \"./filter.module.css\"\r\nimport data from \"./filterjson.json\"\r\nconst Filter = ({setFilter}) => {\r\n    return (\r\n   \r\n           <div className={style.filterlist}>\r\n              <h4>Year</h4>\r\n                 <ul>\r\n                   {data.year.map((data) => <li key={data} onClick={() => setFilter(data)}>{data}</li>\r\n                   )}                   \r\n               </ul>\r\n                <h4>Genre</h4>\r\n                <ul>\r\n                {data.genre.map((data) =>  <li key={data} onClick={() => setFilter(data)}>{data}</li>\r\n                   )}  \r\n                </ul>\r\n           </div>\r\n    )\r\n}\r\n\r\nexport default Filter\r\n","import api from \"axios\"\r\n\r\nconst baseurl = \"https://yts.mx/api/v2/list_movies.json\"\r\nconst moivedetailurl = \"https://yts.mx/api/v2/movie_details.json\"\r\nconst suggesturl = \"https://yts.mx/api/v2/movie_suggestions.json\"\r\n\r\nexport const fetchYtsData = async () => {\r\n    try {\r\n        const response = await api.get(baseurl)\r\n        return response.data.data\r\n    }\r\n    catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n/* fetch movie list */\r\nexport const fetcYtsMovies = async (searchdata,filterData, page) => {\r\n    let pagenumber = 1\r\n   let genre=''\r\n    console.log(filterData)\r\n    if (page) {\r\n        pagenumber = page\r\n    }\r\n    if(Number.isInteger(filterData)){\r\n        searchdata = filterData\r\n    }else{\r\n        genre = filterData\r\n    }\r\n    try {\r\n        const response = await api.get(`${baseurl}/?page=${pagenumber}&query_term=${searchdata}&sort_by=download_count&genre=${genre}&limit=50`)\r\n        let datavalue = response.data.data.movies;\r\n        const modifieddata = datavalue.map((data) => ({\r\n            id: data.id,\r\n            title: data.title,\r\n            year: data.year,\r\n            rating: data.rating,\r\n            runtime: data.runtime,\r\n            genres: data.genres,\r\n            summary: data.summary,\r\n            description_full: data.description_full,\r\n            language: data.language,\r\n            background_image: data.background_image,\r\n            background_image_original: data.background_image_original,\r\n            small_cover_image: data.small_cover_image,\r\n            medium_cover_image: data.medium_cover_image,\r\n            torrents: data.torrents,\r\n        }))\r\n        return modifieddata\r\n    }\r\n    catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n/* movie details */\r\nexport const fetcYtsMoviesdetail = async (movieid) => {\r\n    try {\r\n        const moviedetails = await api.get(`${moivedetailurl}?movie_id=${movieid}&with_images=true&with_cast=true`)\r\n        return moviedetails.data.data.movie\r\n    }\r\n    catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n\r\n/* movie suggestion */\r\n\r\nexport const moviesuggestion = async (movieid) => {\r\n    try {\r\n        const fetchdata = await api.get(`${suggesturl}?movie_id=${movieid}`)\r\n        return fetchdata.data.data.movies\r\n    }\r\n    catch (error) {\r\n        console.log(error);\r\n    }\r\n\r\n}","import React from 'react'\r\nimport style from \"./listitem.module.css\"\r\n\r\nconst Listitems = ({ moviedata,getMovideid }) => {\r\n  \r\n    const dataitem = moviedata.map((data) => {\r\n        return (\r\n            <div className={style.item} key={data.id} id={data.id} onClick={() => getMovideid(data.id)}>\r\n                <figure>\r\n                    <img src={data.medium_cover_image} alt={data.title} />\r\n                </figure>\r\n                <div className={style.info}>\r\n                    <h1>{data.title}</h1>\r\n                    <div className={style.short}>                        \r\n                        <span>Year: {data.year}</span>\r\n                        <span>Rate: {data.rating}/10</span>\r\n                    </div>\r\n                </div>\r\n            </div>)\r\n    })\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {dataitem}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Listitems\r\n","import React from 'react'\r\n\r\nimport srcimg from \"../../assets/loading.gif\"\r\n\r\nfunction Loading() {\r\n    return (\r\n        \r\n            <img className=\"loading\" src={srcimg} alt=\"Loading\" />\r\n        \r\n    )\r\n}\r\n\r\nexport default Loading\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\n\r\nimport { fetcYtsMovies } from \"../../api/api\"\r\nimport Listitem from \"../moviesitem/listitem\"\r\nimport Loading from \"../layout/loading\"\r\n\r\n\r\nconst Listing = ({ searchdata,getMovideid,filterData }) => {\r\n\r\n  const [moviedata, setytsmovie] = useState(null);\r\n  if(searchdata){\r\n    filterData = ''\r\n  }if(filterData){\r\n    searchdata = ''\r\n  }\r\n  \r\n  useEffect(() => {\r\n    const apiData = async () => {\r\n      setytsmovie(await fetcYtsMovies(searchdata,filterData));\r\n    }\r\n    apiData();\r\n  }, [searchdata,filterData])\r\n\r\n  if (!moviedata) return <Loading/>\r\n  return (\r\n    moviedata ?\r\n      <Fragment>\r\n        <Listitem moviedata={moviedata} getMovideid={getMovideid} />\r\n      </Fragment>\r\n\r\n      : null\r\n  )\r\n}\r\n\r\nexport default Listing\r\n","import React, { useState, useEffect, Fragment } from 'react'\r\nimport cn from \"classnames\"\r\nimport { fetcYtsMoviesdetail, moviesuggestion } from \"../../api/api\"\r\nimport style from \"./moviedetail.module.css\"\r\n\r\nconst Moviedetail = ({ movieid, closedetails,suggestId }) => {\r\n    const [moviedata, setmoviedetail] = useState();\r\n\r\n    useEffect(() => {\r\n        if (movieid) {\r\n            const movieapi = async () => {\r\n                setmoviedetail(await fetcYtsMoviesdetail(movieid));\r\n            }\r\n            movieapi();\r\n        }\r\n    }, [movieid])\r\n\r\n    const [suggestmovie, setSuggest] = useState();\r\n\r\n    useEffect(() => {\r\n        if (movieid) {\r\n            const suggestapi = async () => {\r\n                setSuggest(await moviesuggestion(movieid))\r\n            }\r\n            suggestapi();\r\n        }\r\n    }, [movieid])\r\n    return (\r\n        <Fragment>\r\n            <div className={(movieid && style.open)}>\r\n\r\n                <div className={cn(style.detailwrapper)}>\r\n                    {moviedata && <Fragment>\r\n                        <div className={style.headinfo}>\r\n                            <span className={style.close} onClick={closedetails}>&times;</span>\r\n                            <figure><img src={moviedata.background_image_original} alt={moviedata.title} /></figure>\r\n                            <div className={style.info}>\r\n                                <h1>{moviedata.title}</h1>\r\n                                <span>Year: {moviedata.year}</span>\r\n                                <span>Rating: {moviedata.rating}/10</span>\r\n                                <span>Language: {moviedata.language}</span>\r\n                                <div>\r\n                                    Category:\r\n                    <ul className={style.tags}>\r\n                                        {\r\n                                            moviedata.genres && moviedata.genres.map((data) => <li key={data}>{data}</li>)\r\n                                        }\r\n                                    </ul>\r\n                                </div>\r\n                                <div className={style.socialinterest}>\r\n                                    <span>Download: {moviedata.download_count}</span>\r\n                                    <span>Like: {moviedata.like_count}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className={style.moviesinfo}>\r\n                            <h3>About Movie</h3>\r\n                            <p>{moviedata.description_full}</p>\r\n\r\n                            <h3>Gallery</h3>\r\n                            <div className={style.screenshot}>\r\n                                <iframe frameBorder=\"0\" width=\"100%\" height=\"100%\" id=\"player0\" title=\"trailer\" className={style.yt_players} src={\"https://www.youtube.com/embed/\" + moviedata.yt_trailer_code + \"?enablejsapi=1&amp;mode=opaque&amp;rel=0&amp;autohide=1&amp;showinfo=0&amp;wmode=transparent\"} allowFullScreen></iframe>\r\n                                <img src={moviedata.large_screenshot_image1} alt={moviedata.title} />\r\n                                <img src={moviedata.large_screenshot_image2} alt={moviedata.title} />\r\n                                <img src={moviedata.large_screenshot_image3} alt={moviedata.title} />\r\n                            </div>\r\n                            <h3>Cast:</h3>\r\n                            <ul className={style.cast}>\r\n                                {moviedata.cast && moviedata.cast.map((data) =>\r\n                                    <li key={data.name}>\r\n\r\n                                        <figure>\r\n                                            <img src={data.url_small_image} alt={data.name} />\r\n                                        </figure>\r\n                                        <div>\r\n                                            <h3>{data.name}</h3>\r\n                                        </div>\r\n\r\n                                    </li>\r\n                                )}\r\n                            </ul>\r\n                            <h3>Download Link</h3>\r\n\r\n                            <ul className={style.downloadlink}>\r\n                                {moviedata.torrents && moviedata.torrents.map((data) =>\r\n                                    <li key={data.quality}>\r\n                                        <div>\r\n                                            <span className={style.title}>{data.quality}</span>\r\n                                            <span>{data.type}</span>\r\n                                            <span>File Size: <i>{data.size}</i></span>\r\n                                            <span>Torrent: </span>\r\n                                            <a download href={data.url}>Torrent Link</a>\r\n                                            <span>Megnet: </span>\r\n                                            <a href={`magnet:?xt=urn:btih:${data.hash}&dn=Url${moviedata.title}`}>Magnet Link</a>\r\n                                        </div>\r\n                                    </li>\r\n                                )}\r\n                            </ul>\r\n                        </div>\r\n                    </Fragment>}\r\n                    {suggestmovie && <div className={style.suggestionlist}>\r\n                        <h3>Suggestion</h3>\r\n                        <ul>\r\n                            {suggestmovie.map(data => {\r\n                                return (\r\n                                    <li className={style.item} key={data.id} id={data.id} onClick={() => suggestId(data.id)}>\r\n                                        <figure>\r\n                                            <img src={data.medium_cover_image} alt={data.title} />\r\n                                        </figure>\r\n                                        <div className={style.info}>\r\n                                            <h1>{data.title}</h1>\r\n                                            <div className={style.short}>\r\n                                                <span>Language: {data.language}</span>\r\n                                                <span>Year: {data.year}</span>\r\n                                                <span>Rate: {data.rating}/10</span>\r\n                                                <span>Run Time: {data.runtime}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>)\r\n                            }\r\n\r\n                            )}\r\n                        </ul>\r\n                    </div>}\r\n                </div>\r\n                {moviedata && <Fragment>\r\n                    <div className={style.mask} onClick={closedetails}></div>\r\n                </Fragment>}\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Moviedetail\r\n","import React from \"react\"\r\nimport \"../src/css/reset.css\"\r\nimport { Search, Filter, Listings, Detail } from \"./component\"\r\nimport style from \"./component/layout.module.css\"\r\n\r\nimport {fetchYtsData} from \"./api/api\"\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        search: '',\r\n        movieid: null,\r\n        filterdata:'',\r\n        commondata:''\r\n    }\r\n    onSearch = (data) => {\r\n        this.setState({\r\n            search: data\r\n        })\r\n    }\r\n\r\n    getMovideid = (data) => {\r\n        this.setState({\r\n            movieid:data\r\n        })\r\n    }\r\n    closedetails = () =>{\r\n        this.setState({\r\n            movieid:''\r\n        })\r\n    }\r\n    suggestId = (data) =>{\r\n        this.setState({\r\n            movieid:data\r\n        })\r\n    }\r\n    getfilterid=(data) =>{\r\n        this.setState({\r\n            filterdata:data\r\n        })\r\n    }\r\n    async componentDidMount(){    \r\n       this.setState({\r\n           commondata : await fetchYtsData()\r\n       }) \r\n    }\r\n    render() {\r\n        const { search, movieid,filterdata,commondata} = this.state\r\n        return (\r\n            <div className={style.container+' '+(movieid ? 'stopscroll' : '')}>\r\n                <div className={style.search}>\r\n                    <Search onSearch={this.onSearch}  total={commondata.movie_count}/>\r\n                </div>\r\n                <div className={style.filter}>\r\n                    <Filter  setFilter ={this.getfilterid}/>\r\n                </div>\r\n                <div className={style.listings}>\r\n                    <Listings searchdata={search} getMovideid = {this.getMovideid} filterData = {filterdata}/>\r\n                </div>\r\n                <Detail movieid={movieid} closedetails={this.closedetails} suggestId={this.suggestId}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'https://nagarajanprince.github.io/moviefix' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\"\r\nimport ReactDom from \"react-dom\"\r\nimport App from \"./app\"\r\nimport * as serviceWorker from \"./serviceWorker\"\r\n\r\nReactDom.render(<App/>,document.getElementById(\"root\"));\r\n\r\nserviceWorker.register();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"layout_container__2Ma6K\",\"search\":\"layout_search__3sw2Q\",\"filter\":\"layout_filter__Qewrr\",\"listings\":\"layout_listings__2XvIy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"listitem_item__56DCs\",\"short\":\"listitem_short__zOkcc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchwrap\":\"search_searchwrap__3wZUZ\",\"count\":\"search_count__1gsoo\"};"],"sourceRoot":""}